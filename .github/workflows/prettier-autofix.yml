name: Prettier Auto Fix

on:
  pull_request:
  pull_request_target:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  autofix:
    name: Format and propose changes
    if: ${{ github.event_name != 'pull_request_target' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package.json

      - name: Install dependencies
        if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --no-audit --no-fund
          fi

      - name: Run Prettier (write fixes)
        if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        run: |
          npm run format:md
          npm run format:json
          npm run format:yaml

      - name: Markdownlint (auto-fix)
        if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        run: npx markdownlint "**/*.md" "**/*.markdown" --config .markdownlint.json --ignore-path .markdownlintignore --fix

      - name: Commit formatting changes to PR branch (Dependabot only)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.event.pull_request.user.login == 'dependabot[bot]' }}
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: "chore(format): apply Prettier/markdownlint fixes"
          branch: ${{ github.head_ref }}
          file_pattern: |
            **/*.md
            **/*.markdown
            **/*.json
            **/*.asmdef
            **/*.asmref
            **/*.yml
            **/*.yaml

      - name: Prettier check (Markdown)
        run: npm run format:md:check

      - name: Prettier check (JSON / asmdef / asmref)
        run: npm run format:json:check

      - name: Prettier check (YAML)
        run: npm run format:yaml:check

      - name: Markdown lint (CI gate)
        run: npm run lint:markdown

      - name: Enforce EOL (CRLF) and No BOM
        shell: pwsh
        run: ./scripts/check-eol.ps1 -VerboseOutput

  autofix_fork:
    name: Fork PR bot formatting PR (Dependabot only)
    if: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && github.event.pull_request.user.login == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork PR HEAD
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --no-audit --no-fund
          fi

      - name: Run Prettier (write fixes)
        run: |
          npm run format:md
          npm run format:json
          npm run format:yaml

      - name: Markdownlint (auto-fix)
        run: npx markdownlint "**/*.md" "**/*.markdown" --config .markdownlint.json --ignore-path .markdownlintignore --fix

      - name: Detect changes
        id: changes
        shell: bash
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create bot branch and push to base repo
        if: steps.changes.outputs.has_changes == 'true'
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          BRANCH="bot/prettier/pr-${{ github.event.pull_request.number }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH"
          # Stage only files we format; avoid workflows to prevent permission issues
          git add '**/*.md' '**/*.markdown' '**/*.json' '**/*.asmdef' '**/*.asmref' '**/*.yml' '**/*.yaml'
          git commit -m "chore(format): apply Prettier/markdownlint fixes for PR #${{ github.event.pull_request.number }}"
          git remote add upstream "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git fetch upstream
          git push upstream "$BRANCH" --force
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Open or update formatting PR in base repo
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const baseRef = context.payload.pull_request.base.ref;
            const headBranch = `bot/prettier/pr-${prNumber}`;
            const {owner, repo} = context.repo;
            const title = `chore(format): Apply Prettier/markdownlint to PR #${prNumber}`;
            const body = [
              `This automated PR applies Prettier and markdownlint fixes to the changes from PR #${prNumber}.`,
              '',
              `- Source PR (fork): #${prNumber}`,
              `- Target branch: ${baseRef}`,
              '',
              'If this PR is merged, it will include the contributor\'s changes plus required formatting.',
              'You can then close the original PR or ask the author to rebase.',
            ].join('\n');

            const existing = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${headBranch}` });
            if (existing.data.length === 0) {
              await github.rest.pulls.create({ owner, repo, head: headBranch, base: baseRef, title, body });
            }

      - name: Comment link on original PR
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const {owner, repo} = context.repo;
            const headBranch = `bot/prettier/pr-${prNumber}`;
            const resp = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${headBranch}` });
            if (resp.data.length > 0) {
              const fmtPr = resp.data[0];
              const body = `A formatting PR has been opened: #${fmtPr.number} (applies Prettier/markdownlint fixes to this PR).`;
              const comments = await github.rest.issues.listComments({ owner, repo, issue_number: prNumber, per_page: 50 });
              const already = comments.data.some(
                (c) =>
                  c.body &&
                  c.body.includes(`#${fmtPr.number}`) &&
                  c.user &&
                  c.user.login === 'github-actions[bot]'
              );
              if (!already) {
                await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body });
              }
            }
